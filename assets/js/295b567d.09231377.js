(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{251:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),u=function(e){var t=o.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,b=d["".concat(l,".").concat(m)]||d[m]||s[m]||a;return n?o.a.createElement(b,i(i({ref:t},c),{},{components:n})):o.a.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return d}));var r=n(1),o=n(8),a=(n(0),n(251)),l=["components"],i={title:"Migration Guide",description:"Updating your app to Angular Apollo v3"},p={unversionedId:"migration",id:"migration",isDocsHomePage:!1,title:"Migration Guide",description:"Updating your app to Angular Apollo v3",source:"@site/docs/migration.md",slug:"/migration",permalink:"/docs/migration",editUrl:"https://github.com/kamilkisiela/apollo-angular/edit/master/website/docs/migration.md",version:"current",sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/"},next:{title:"Get started",permalink:"/docs/get-started"}},c=[{value:"ApolloModule",id:"apollomodule",children:[]},{value:"File upload",id:"file-upload",children:[]}],u={toc:c};function d(e){var t=e.components,n=Object(o.a)(e,l);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"ApolloModule")," is back."),Object(a.b)("li",{parentName:"ul"},"File upload requires ",Object(a.b)("inlineCode",{parentName:"li"},"extract-files")," library.")),Object(a.b)("h2",{id:"apollomodule"},"ApolloModule"),Object(a.b)("p",null,"The lazy-loading was broken in the previous major version but now it's fixed, all thanks to bringing back the ",Object(a.b)("inlineCode",{parentName:"p"},"ApolloModule"),".\nJust like with any other ",Object(a.b)("inlineCode",{parentName:"p"},"NgModule"),", put it wherever makes sense for your app, usually it's ",Object(a.b)("inlineCode",{parentName:"p"},"AppModule")," or ",Object(a.b)("inlineCode",{parentName:"p"},"GraphQLModule"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-diff",metastring:'language="typescript"',language:'"typescript"'},"import {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n-import {APOLLO_OPTIONS} from 'apollo-angular';\n+import {ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLink} from 'apollo-angular/http';\nimport {InMemoryCache} from '@apollo/client/core';\n\n\n@NgModule({\n  imports: [\n    // ... other modules\n    HttpClientModule,\n+   ApolloModule,\n  ],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory(httpLink: HttpLink) {\n        return {\n          cache: new InMemoryCache(),\n          link: httpLink.create({\n            uri: 'http://localhost:3000',\n          }),\n        };\n      },\n      deps: [HttpLink],\n    },\n  ],\n})\nclass AppModule {}\n")),Object(a.b)("h2",{id:"file-upload"},"File upload"),Object(a.b)("p",null,"New ",Object(a.b)("inlineCode",{parentName:"p"},"apollo-angular")," no longer depends on ",Object(a.b)("inlineCode",{parentName:"p"},"extract-files")," library. In order to use file uploads, you need to pass the ",Object(a.b)("inlineCode",{parentName:"p"},"extractFiles")," function (or create your own) to the ",Object(a.b)("inlineCode",{parentName:"p"},"ApolloLink.create()"),":"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-diff",metastring:'language="typescript"',language:'"typescript"'},"import {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLink} from 'apollo-angular/http';\nimport {InMemoryCache} from '@apollo/client/core';\n+ import extractFiles from 'extract-files/extractFiles.mjs';\n\n@NgModule({\n  imports: [\n    // ... other modules\n    HttpClientModule,\n    ApolloModule,\n  ],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory(httpLink: HttpLink) {\n        return {\n          cache: new InMemoryCache(),\n          link: httpLink.create({\n            uri: 'http://localhost:3000',\n+           extractFiles,\n          }),\n        };\n      },\n      deps: [HttpLink],\n    },\n  ],\n})\nclass AppModule {}\n")))}d.isMDXComponent=!0}}]);