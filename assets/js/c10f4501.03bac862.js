(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{156:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return l})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return u}));var a=r(1),n=r(8),i=(r(0),r(251)),o=["components"],s={title:"Automatic Persisted Queries"},l={unversionedId:"recipes/automatic-persisted-queries",id:"version-2.0/recipes/automatic-persisted-queries",isDocsHomePage:!1,title:"Automatic Persisted Queries",description:"Unlike REST APIs that use a fixed URL to load data, GraphQL provides a rich query language that can be used to express the shape of application data requirements. This is a marvelous advancement in technology, but it comes at a cost: GraphQL query strings are often much longer than REST URLS \u2014 in some cases by many kilobytes.",source:"@site/versioned_docs/version-2.0/recipes/automatic-persisted-queries.md",slug:"/recipes/automatic-persisted-queries",permalink:"/docs/2.0/recipes/automatic-persisted-queries",editUrl:"https://github.com/kamilkisiela/apollo-angular/edit/master/website/versioned_docs/version-2.0/recipes/automatic-persisted-queries.md",version:"2.0",sidebar:"version-2.0/docs",previous:{title:"Simple Example",permalink:"/docs/2.0/recipes/simple-example"},next:{title:"Angular CLI",permalink:"/docs/2.0/recipes/angular-cli"}},c=[{value:"How it works",id:"how-it-works",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[]},{value:"More",id:"more",children:[]}],p={toc:c};function u(e){var t=e.components,r=Object(n.a)(e,o);return Object(i.b)("wrapper",Object(a.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Unlike REST APIs that use a fixed URL to load data, GraphQL provides a rich query language that can be used to express the shape of application data requirements. This is a marvelous advancement in technology, but it comes at a cost: GraphQL query strings are often much longer than REST URLS \u2014 in some cases by many kilobytes."),Object(i.b)("p",null,"In practice we've seen GraphQL query sizes ranging well above 10 KB just for the query text. This is significant overhead when compared with a simple URL of 50-100 characters. When paired with the fact that the uplink speed from the client is typically the most bandwidth-constrained part of the chain, large queries can become bottlenecks for client performance."),Object(i.b)("p",null,"Automatic Persisted Queries solves this problem by sending a generated ID instead of the query text as the request."),Object(i.b)("p",null,"Read more about ",Object(i.b)("a",{parentName:"p",href:"https://blog.apollographql.com/improve-graphql-performance-with-automatic-persisted-queries-c31d27b8e6ea"},"Automatic Persisted Queries"),"."),Object(i.b)("h2",{id:"how-it-works"},"How it works"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"When the client makes a query, it will optimistically send a short (64-byte) cryptographic hash instead of the full query text."),Object(i.b)("li",{parentName:"ol"},"If the backend recognizes the hash, it will retrieve the full text of the query and execute it."),Object(i.b)("li",{parentName:"ol"},"If the backend doesn't recogize the hash, it will ask the client to send the hash and the query text to it can store them mapped together for future lookups. During this request, the backend will also fulfill the data request.")),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"npm install apollo-angular --save\n")),Object(i.b)("p",null,"If you do not already have a SHA-256 based hashing function available in your application, you will need to install one separately. For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"npm install crypto-hash --save\n")),Object(i.b)("p",null,"This link doesn't include a SHA-256 hash function by default, to avoid forcing one as a dependency. Developers should pick the most appropriate SHA-256 function (sync or async) for their needs/environment."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"Use ",Object(i.b)("inlineCode",{parentName:"p"},"createPersistedQueryLink")," function and put it before ",Object(i.b)("inlineCode",{parentName:"p"},"HttpLink")," in the link chain."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"},"import {HttpLink} from 'apollo-angular/http'; // or batch link\nimport {createPersistedQueryLink} from 'apollo-angular/persisted-queries';\nimport { sha256 } from 'crypto-hash';\n\n@NgModule({\n  imports: [],\n})\nclass AppModule {\n  constructor(httpLink: HttpLink) {\n    const link = createPersistedQueryLink({\n      sha256\n    }).concat(\n      httpLink.create({uri: '/graphql'}),\n    );\n  }\n}\n")),Object(i.b)("p",null,"Thats it! Now your client will start sending query signatures instead of the full text resulting in improved network performance"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://www.apollographql.com/docs/react/api/link/persisted-queries/#options"},"Check Options")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://www.apollographql.com/docs/react/api/link/persisted-queries/#protocol"},"Read about protocol")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://www.apollographql.com/docs/react/api/link/persisted-queries/#build-time-generation"},"Build time generation")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://www.apollographql.com/docs/react/api/link/persisted-queries/#gatsby-focus-wrapper"},"Learn more about Automatic Persisted Querys"))),Object(i.b)("h2",{id:"more"},"More"),Object(i.b)("p",null,"This library is just a simple wrapper of ",Object(i.b)("a",{parentName:"p",href:"https://github.com/apollographql/apollo-client/tree/main/src/link/persisted-queries"},Object(i.b)("inlineCode",{parentName:"a"},"@apollo/client/link/persisted-queries"))," to make it work in Angular with ",Object(i.b)("inlineCode",{parentName:"p"},"apollo-angular/http")," (also with batch link). Thanks to that you can use any options, any functionality that the original package provides."))}u.isMDXComponent=!0},251:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return b}));var a=r(0),n=r.n(a);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=n.a.createContext({}),p=function(e){var t=n.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},h=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),h=a,b=u["".concat(o,".").concat(h)]||u[h]||d[h]||i;return r?n.a.createElement(b,s(s({ref:t},c),{},{components:r})):n.a.createElement(b,s({ref:t},c))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,r)}h.displayName="MDXCreateElement"}}]);