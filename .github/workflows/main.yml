name: CI

on: [pull_request, push]

jobs:
  test:
    name: Test on node ${{ matrix.node_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [12, 14]

    steps:
      - uses: actions/checkout@master

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node_version }}

      - uses: actions/cache@v2
        name: Cache node_modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

      - name: Pack
        run: (cd packages/apollo-angular/build && yarn pack --filename apollo-angular.tgz && mv apollo-angular.tgz ../apollo-angular.tgz)

      - uses: actions/cache@v2
        name: Share tarball
        with:
          path: 'packages/apollo-angular/apollo-angular.tgz'
          key: ${{ github.sha }}

  angular:
    name: Test on Angular ${{ matrix.angular_version }}
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        angular_version: [10, 11, 12]
    steps:
      - name: Use Node.js 14
        uses: actions/setup-node@master
        with:
          node-version: 14

      - uses: actions/cache@v2
        name: Share tarball
        with:
          path: 'packages/apollo-angular/apollo-angular.tgz'
          key: ${{ github.sha }}

      - name: Install Angular CLI
        run: npm install @angular/cli@${{ matrix.angular_version }} --global

      - name: Create Application
        run: ng new testapp --package-manager yarn --defaults --minimal --skip-git

      - name: ng add apollo-angular
        run: cd testapp && ng add ../packages/apollo-angular/apollo-angular.tgz --defaults --verbose

